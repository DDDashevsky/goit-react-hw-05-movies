{"version":3,"file":"static/js/387.d53803e7.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/imageValidation.js","components/serviseAPI/fetchMoviesAPI.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-top: 20px;\n  padding: 20px;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  border-radius: 10px;\n`;\n//HHHH\nexport const Item = styled.li`\n  background-color: white;\n  border: 1px solid lightgrey;\n  border-radius: 7px;\n  overflow: hidden;\n  width: 200px;\n  height: 450px;\n`;\n\nexport const Image = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const Text = styled.p`\n  padding: 5px;\n  text-align: center;\n  font-weight: 500;\n`;\n\nexport const Container = styled.div``;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Item, Image, Text, Container } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { nanoid } from 'nanoid';\nimport { fetchMovieActorDetails } from 'components/serviseAPI/fetchMoviesAPI';\nimport imageValidation from 'components/imageValidation';\n\nconst CastSection = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchActor = async () => {\n      const result = await fetchMovieActorDetails(id, {\n        signal: abortController.signal,\n      });\n      if (result) setCast(result);\n      setStatus('loaded');\n    };\n\n    if (cast !== null) return;\n    fetchActor();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [cast, id]);\n\n  return (\n    <Container>\n      {status === 'idle' && <Loader />}\n      {cast !== null && (\n        <List>\n          {cast.map(el => {\n            return (\n              <Item key={nanoid()}>\n                <Image src={imageValidation(el.profile_path, 300)} />\n                <Text>{el.name}</Text>\n                <Text>Character: {el.character}</Text>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default CastSection;\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Grid color=\"#102fdfdd\" height={100} width={100} wrapperClass=\"Loader\" />\n  );\n};\n","export default function imageValidation(value, width) {\n  if (value === null)\n    return 'https://media.istockphoto.com/id/1357365823/vector/default-image-icon-vector-missing-picture-page-for-website-design-or-mobile-app-no-photo.jpg?s=612x612&w=0&k=20&c=PM_optEhHBTZkuJQLlCjLz-v3zzxp-1mpNQZsdjrbns=';\n  return `https://image.tmdb.org/t/p/w${width}/${value}`;\n}\n","import axios from 'axios';\nconst KEY = 'f5b8fda00d2f47b0eff33be89e14dda0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (page, abortController) => {\n  try {\n    const response = await axios.get(\n      `trending/movie/day?api_key=${KEY}&page=${page}`,\n      abortController\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByKeyword = async (query, page, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      abortSettings\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetailsInfo = async (movieId, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`,\n      abortSettings\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieActorDetails = async (movieId, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `\nmovie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      abortSettings\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, abortController) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n      abortController\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["List","styled","Item","Image","Text","Container","id","useParams","useState","cast","setCast","status","setStatus","useEffect","abortController","AbortController","fetchActor","fetchMovieActorDetails","signal","result","abort","Loader","map","el","src","imageValidation","profile_path","name","character","nanoid","color","height","width","wrapperClass","value","KEY","axios","fetchTrendingMovies","page","response","data","results","console","log","fetchMoviesByKeyword","query","abortSettings","fetchMovieDetailsInfo","movieId","fetchMovieReviews","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}