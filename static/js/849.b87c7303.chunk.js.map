{"version":3,"file":"static/js/849.b87c7303.chunk.js","mappings":"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","sources":["components/FilmItem/FilmItem.styled.js","components/FilmItem/FilmItem.jsx","components/FilmList/FilmList.styled.js","components/Loader/Loader.jsx","components/serviseAPI/fetchMoviesAPI.jsx","components/FilmList/FilmList.jsx","pages/Home/Home.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n\n  justify-content: space-between;\n  align-items: baseline;\n  padding: 3px 350px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Title = styled.span`\n  padding: 5px;\n  font-size: 16px;\n  font-weight: bold;\n`;\nexport const Button = styled(Link)`\n  display: flex;\n  width: 100px;\n  height: 20px;\n  background-color: white;\n  border: 1px solid grey;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-decoration: none;\n  border-radius: 5px;\n  color: black;\n  &:visited,\n  &:active {\n    color: blue;\n  }\n  &:hover,\n  &:focus {\n    color: lightgreen;\n  }\n`;\n\nexport const Input = styled.input``;\n","import { Button,  Item, Title } from './FilmItem.styled';\n\nexport const FilmItem = ({ imageLink, title, id, to, state }) => (\n  <Item>\n    <Title>{title}</Title>\n    <Button to={`${to}${id}`} state={state}>\n      Details{' '}\n    </Button>\n  </Item>\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 10px;\n  width: 120px;\n  height: 40px;\n  border: none;\n  border-radius: 5px;\n  color: grey;\n  background-color: lightgrey;\n  &:hover,\n  &:focus {\n    background-color: lightgreen;\n  }\n`;\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Grid color=\"#102fdfdd\" height={100} width={100} wrapperClass=\"Loader\" />\n  );\n};\n","import axios from 'axios';\nconst KEY = 'f5b8fda00d2f47b0eff33be89e14dda0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (page, abortController) => {\n  try {\n    const response = await axios.get(\n      `trending/movie/day?api_key=${KEY}&page=${page}`,\n      abortController\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByKeyword = async (query, page, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n      abortSettings\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetailsInfo = async (movieId, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${KEY}&language=en-US`,\n      abortSettings\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieActorDetails = async (movieId, abortSettings) => {\n  try {\n    const response = await axios.get(\n      `\nmovie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n      abortSettings\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (movieId, abortController) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n      abortController\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { FilmItem } from 'components/FilmItem/FilmItem';\nimport { nanoid } from 'nanoid';\nimport { Button, List } from './FilmList.styled';\nimport { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'components/serviseAPI/fetchMoviesAPI';\n\nexport const FilmList = () => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n\n  const handleClick = () => {\n    setPage(prevPage => {\n      return prevPage + 1;\n    });\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchTrends = async () => {\n      const results = await fetchTrendingMovies(page, {\n        signal: abortController.signal,\n      });\n      if (results) setData(prevData => [...prevData, ...results]);\n      setStatus('loaded');\n    };\n    fetchTrends();\n    return () => {\n      abortController.abort();\n    };\n  }, [page]);\n\n  return (\n    <div>\n      {status === 'idle' && <Loader />}\n      <List>\n        {data.map(el => (\n          <FilmItem\n            key={nanoid()}\n            imageLink={el.poster_path}\n            title={el.original_title || el.original_name || el.title}\n            id={el.id}\n            to={'movies/'}\n            state={{ from: location }}\n          />\n        ))}\n      </List>\n      {data.length !== 0 && <Button onClick={handleClick}>Load more</Button>}\n    </div>\n  );\n};\n","import { FilmList } from 'components/FilmList/FilmList';\n\nconst Home = () => <FilmList />;\n\nexport default Home;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Item","styled","Title","Button","Link","FilmItem","imageLink","title","id","to","state","List","Loader","color","height","width","wrapperClass","KEY","axios","fetchTrendingMovies","page","abortController","response","data","results","console","log","fetchMoviesByKeyword","query","abortSettings","fetchMovieDetailsInfo","movieId","fetchMovieActorDetails","cast","fetchMovieReviews","FilmList","useState","setData","setPage","status","setStatus","location","useLocation","useEffect","AbortController","fetchTrends","signal","prevData","abort","map","el","poster_path","original_title","original_name","from","nanoid","length","onClick","prevPage","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}